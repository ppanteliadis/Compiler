/* Test Random */

/* Should Insert:
 *	- Variable 'nl'						| Scope: 0
 *
 *	- Function 'Assert'					| Scope: 0
 *	- Argument 'con'					| Scope: 1
 *
 *	- Function 'IsEven'					| Scope: 0
 *	- Argument 'num'					| Scope: 1
 *
 *	- Function 'IsOdd'					| Scope: 0
 *	- Argument 'num'					| Scope: 1
 *
 *	- Function 'CanDivideByTen'			| Scope: 0
 *	- Argument 'num'					| Scope: 1
 *
 *	- Function 'PrintParityOfNumbers'	| Scope: 0
 *	- Argument 'MAX'					| Scope: 1
 *	- Local Variable 'exit'				| Scope: 1
 *	- Local Variable 'i'				| Scope: 2
 *
 *	- Local Variable 'even'				| Scope: 1
 *	- Local Variable 'odd'				| Scope: 1
 *	- Local Variable 'cnt'				| Scope: 1
 *
 *	- Function 'Print'					| Scope: 0
 */


nl = "\n";

function Assert( con ) {
	if ( not con )
		print( "Assertion", nl );
}

function IsEven( num ) {
	return num % 2 == 0;
}

function IsOdd( num ) {
	return not IsEven( num );
}

function CanDivideByTen( num ) {
	return num % 10;
}

function PrintParityOfNumbers( MAX ) {
	local exit = true;

	for ( local i = 0; i < MAX + 1; ++i ) {
		if ( IsEven(i) )
			print( i, " is evan", nl );
		else if ( IsOdd(i) )
			print( i, " is odd", nl );
		else {
			exit = false;
			break;
		}
	}

	return exit;
}

for ( local even = 0, local odd = 1, local cnt = 0; (IsEven(even) and IsOdd(odd)) or (CanDivideByTen(10)); ) {
	if ( cnt == 10 )
		break;
	if ( cnt == 0 ) {
		even = 1;
		odd	 = 0;
		cnt  = 10;
	}		
}

function Print() {
	print( "cnt: ", cnt, nl );		// Prints 10
	print( "even: ", even, nl );	// Prints 1
	print( "odd: ", odd, nl );		// Prints 0
}

Print();
Assert( PrintParityOfNumbers(10) );
